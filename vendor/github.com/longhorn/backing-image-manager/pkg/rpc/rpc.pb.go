// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/longhorn/backing-image-manager/pkg/rpc/rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BackingImageSpec struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Checksum             string   `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackingImageSpec) Reset()         { *m = BackingImageSpec{} }
func (m *BackingImageSpec) String() string { return proto.CompactTextString(m) }
func (*BackingImageSpec) ProtoMessage()    {}
func (*BackingImageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{0}
}

func (m *BackingImageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackingImageSpec.Unmarshal(m, b)
}
func (m *BackingImageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackingImageSpec.Marshal(b, m, deterministic)
}
func (m *BackingImageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackingImageSpec.Merge(m, src)
}
func (m *BackingImageSpec) XXX_Size() int {
	return xxx_messageInfo_BackingImageSpec.Size(m)
}
func (m *BackingImageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_BackingImageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_BackingImageSpec proto.InternalMessageInfo

func (m *BackingImageSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BackingImageSpec) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BackingImageSpec) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *BackingImageSpec) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type BackingImageStatus struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	SendingReference     int32    `protobuf:"varint,3,opt,name=sending_reference,json=sendingReference,proto3" json:"sending_reference,omitempty"`
	SenderManagerAddress string   `protobuf:"bytes,4,opt,name=sender_manager_address,json=senderManagerAddress,proto3" json:"sender_manager_address,omitempty"`
	Progress             int32    `protobuf:"varint,5,opt,name=progress,proto3" json:"progress,omitempty"`
	Checksum             string   `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackingImageStatus) Reset()         { *m = BackingImageStatus{} }
func (m *BackingImageStatus) String() string { return proto.CompactTextString(m) }
func (*BackingImageStatus) ProtoMessage()    {}
func (*BackingImageStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{1}
}

func (m *BackingImageStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackingImageStatus.Unmarshal(m, b)
}
func (m *BackingImageStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackingImageStatus.Marshal(b, m, deterministic)
}
func (m *BackingImageStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackingImageStatus.Merge(m, src)
}
func (m *BackingImageStatus) XXX_Size() int {
	return xxx_messageInfo_BackingImageStatus.Size(m)
}
func (m *BackingImageStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_BackingImageStatus.DiscardUnknown(m)
}

var xxx_messageInfo_BackingImageStatus proto.InternalMessageInfo

func (m *BackingImageStatus) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *BackingImageStatus) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *BackingImageStatus) GetSendingReference() int32 {
	if m != nil {
		return m.SendingReference
	}
	return 0
}

func (m *BackingImageStatus) GetSenderManagerAddress() string {
	if m != nil {
		return m.SenderManagerAddress
	}
	return ""
}

func (m *BackingImageStatus) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *BackingImageStatus) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type BackingImageResponse struct {
	Spec                 *BackingImageSpec   `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               *BackingImageStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BackingImageResponse) Reset()         { *m = BackingImageResponse{} }
func (m *BackingImageResponse) String() string { return proto.CompactTextString(m) }
func (*BackingImageResponse) ProtoMessage()    {}
func (*BackingImageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{2}
}

func (m *BackingImageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackingImageResponse.Unmarshal(m, b)
}
func (m *BackingImageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackingImageResponse.Marshal(b, m, deterministic)
}
func (m *BackingImageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackingImageResponse.Merge(m, src)
}
func (m *BackingImageResponse) XXX_Size() int {
	return xxx_messageInfo_BackingImageResponse.Size(m)
}
func (m *BackingImageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackingImageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackingImageResponse proto.InternalMessageInfo

func (m *BackingImageResponse) GetSpec() *BackingImageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *BackingImageResponse) GetStatus() *BackingImageStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{3}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type GetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{4}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type ListResponse struct {
	BackingImages        map[string]*BackingImageResponse `protobuf:"bytes,1,rep,name=backing_images,json=backingImages,proto3" json:"backing_images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{5}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetBackingImages() map[string]*BackingImageResponse {
	if m != nil {
		return m.BackingImages
	}
	return nil
}

type VersionResponse struct {
	Version                          string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitCommit                        string   `protobuf:"bytes,2,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	BuildDate                        string   `protobuf:"bytes,3,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	BackingImageManagerApiVersion    int64    `protobuf:"varint,4,opt,name=backing_image_manager_api_version,json=backingImageManagerApiVersion,proto3" json:"backing_image_manager_api_version,omitempty"`
	BackingImageManagerApiMinVersion int64    `protobuf:"varint,5,opt,name=backing_image_manager_api_min_version,json=backingImageManagerApiMinVersion,proto3" json:"backing_image_manager_api_min_version,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{6}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionResponse) GetGitCommit() string {
	if m != nil {
		return m.GitCommit
	}
	return ""
}

func (m *VersionResponse) GetBuildDate() string {
	if m != nil {
		return m.BuildDate
	}
	return ""
}

func (m *VersionResponse) GetBackingImageManagerApiVersion() int64 {
	if m != nil {
		return m.BackingImageManagerApiVersion
	}
	return 0
}

func (m *VersionResponse) GetBackingImageManagerApiMinVersion() int64 {
	if m != nil {
		return m.BackingImageManagerApiMinVersion
	}
	return 0
}

type SyncRequest struct {
	Spec                 *BackingImageSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	FromAddress          string            `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SyncRequest) Reset()         { *m = SyncRequest{} }
func (m *SyncRequest) String() string { return proto.CompactTextString(m) }
func (*SyncRequest) ProtoMessage()    {}
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{7}
}

func (m *SyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncRequest.Unmarshal(m, b)
}
func (m *SyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncRequest.Marshal(b, m, deterministic)
}
func (m *SyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncRequest.Merge(m, src)
}
func (m *SyncRequest) XXX_Size() int {
	return xxx_messageInfo_SyncRequest.Size(m)
}
func (m *SyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncRequest proto.InternalMessageInfo

func (m *SyncRequest) GetSpec() *BackingImageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *SyncRequest) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

type SendRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ToAddress            string   `protobuf:"bytes,3,opt,name=to_address,json=toAddress,proto3" json:"to_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendRequest) Reset()         { *m = SendRequest{} }
func (m *SendRequest) String() string { return proto.CompactTextString(m) }
func (*SendRequest) ProtoMessage()    {}
func (*SendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{8}
}

func (m *SendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendRequest.Unmarshal(m, b)
}
func (m *SendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendRequest.Marshal(b, m, deterministic)
}
func (m *SendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendRequest.Merge(m, src)
}
func (m *SendRequest) XXX_Size() int {
	return xxx_messageInfo_SendRequest.Size(m)
}
func (m *SendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendRequest proto.InternalMessageInfo

func (m *SendRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SendRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SendRequest) GetToAddress() string {
	if m != nil {
		return m.ToAddress
	}
	return ""
}

type FetchRequest struct {
	Spec                 *BackingImageSpec `protobuf:"bytes,1,opt,name=spec,proto3" json:"spec,omitempty"`
	DataSourceAddress    string            `protobuf:"bytes,2,opt,name=data_source_address,json=dataSourceAddress,proto3" json:"data_source_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{9}
}

func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

func (m *FetchRequest) GetSpec() *BackingImageSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *FetchRequest) GetDataSourceAddress() string {
	if m != nil {
		return m.DataSourceAddress
	}
	return ""
}

type PrepareDownloadRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareDownloadRequest) Reset()         { *m = PrepareDownloadRequest{} }
func (m *PrepareDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*PrepareDownloadRequest) ProtoMessage()    {}
func (*PrepareDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{10}
}

func (m *PrepareDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareDownloadRequest.Unmarshal(m, b)
}
func (m *PrepareDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareDownloadRequest.Marshal(b, m, deterministic)
}
func (m *PrepareDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareDownloadRequest.Merge(m, src)
}
func (m *PrepareDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_PrepareDownloadRequest.Size(m)
}
func (m *PrepareDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareDownloadRequest proto.InternalMessageInfo

func (m *PrepareDownloadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PrepareDownloadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type PrepareDownloadResponse struct {
	SrcFilePath          string   `protobuf:"bytes,1,opt,name=src_file_path,json=srcFilePath,proto3" json:"src_file_path,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareDownloadResponse) Reset()         { *m = PrepareDownloadResponse{} }
func (m *PrepareDownloadResponse) String() string { return proto.CompactTextString(m) }
func (*PrepareDownloadResponse) ProtoMessage()    {}
func (*PrepareDownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{11}
}

func (m *PrepareDownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareDownloadResponse.Unmarshal(m, b)
}
func (m *PrepareDownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareDownloadResponse.Marshal(b, m, deterministic)
}
func (m *PrepareDownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareDownloadResponse.Merge(m, src)
}
func (m *PrepareDownloadResponse) XXX_Size() int {
	return xxx_messageInfo_PrepareDownloadResponse.Size(m)
}
func (m *PrepareDownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareDownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareDownloadResponse proto.InternalMessageInfo

func (m *PrepareDownloadResponse) GetSrcFilePath() string {
	if m != nil {
		return m.SrcFilePath
	}
	return ""
}

func (m *PrepareDownloadResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type BackupCreateRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string            `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Checksum             string            `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	BackupTarget         string            `protobuf:"bytes,4,opt,name=backup_target,json=backupTarget,proto3" json:"backup_target,omitempty"`
	Labels               []string          `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	Credential           map[string]string `protobuf:"bytes,6,rep,name=credential,proto3" json:"credential,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CompressionMethod    string            `protobuf:"bytes,7,opt,name=compression_method,json=compressionMethod,proto3" json:"compression_method,omitempty"`
	ConcurrentLimit      int32             `protobuf:"varint,8,opt,name=concurrent_limit,json=concurrentLimit,proto3" json:"concurrent_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BackupCreateRequest) Reset()         { *m = BackupCreateRequest{} }
func (m *BackupCreateRequest) String() string { return proto.CompactTextString(m) }
func (*BackupCreateRequest) ProtoMessage()    {}
func (*BackupCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{12}
}

func (m *BackupCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupCreateRequest.Unmarshal(m, b)
}
func (m *BackupCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupCreateRequest.Marshal(b, m, deterministic)
}
func (m *BackupCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupCreateRequest.Merge(m, src)
}
func (m *BackupCreateRequest) XXX_Size() int {
	return xxx_messageInfo_BackupCreateRequest.Size(m)
}
func (m *BackupCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupCreateRequest proto.InternalMessageInfo

func (m *BackupCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BackupCreateRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *BackupCreateRequest) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *BackupCreateRequest) GetBackupTarget() string {
	if m != nil {
		return m.BackupTarget
	}
	return ""
}

func (m *BackupCreateRequest) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *BackupCreateRequest) GetCredential() map[string]string {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (m *BackupCreateRequest) GetCompressionMethod() string {
	if m != nil {
		return m.CompressionMethod
	}
	return ""
}

func (m *BackupCreateRequest) GetConcurrentLimit() int32 {
	if m != nil {
		return m.ConcurrentLimit
	}
	return 0
}

type BackupStatusRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupStatusRequest) Reset()         { *m = BackupStatusRequest{} }
func (m *BackupStatusRequest) String() string { return proto.CompactTextString(m) }
func (*BackupStatusRequest) ProtoMessage()    {}
func (*BackupStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{13}
}

func (m *BackupStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupStatusRequest.Unmarshal(m, b)
}
func (m *BackupStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupStatusRequest.Marshal(b, m, deterministic)
}
func (m *BackupStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupStatusRequest.Merge(m, src)
}
func (m *BackupStatusRequest) XXX_Size() int {
	return xxx_messageInfo_BackupStatusRequest.Size(m)
}
func (m *BackupStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupStatusRequest proto.InternalMessageInfo

func (m *BackupStatusRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type BackupStatusResponse struct {
	Progress             int32    `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	BackupUrl            string   `protobuf:"bytes,2,opt,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	Error                string   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupStatusResponse) Reset()         { *m = BackupStatusResponse{} }
func (m *BackupStatusResponse) String() string { return proto.CompactTextString(m) }
func (*BackupStatusResponse) ProtoMessage()    {}
func (*BackupStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cdf73a3350f27fd7, []int{14}
}

func (m *BackupStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupStatusResponse.Unmarshal(m, b)
}
func (m *BackupStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupStatusResponse.Marshal(b, m, deterministic)
}
func (m *BackupStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupStatusResponse.Merge(m, src)
}
func (m *BackupStatusResponse) XXX_Size() int {
	return xxx_messageInfo_BackupStatusResponse.Size(m)
}
func (m *BackupStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupStatusResponse proto.InternalMessageInfo

func (m *BackupStatusResponse) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *BackupStatusResponse) GetBackupUrl() string {
	if m != nil {
		return m.BackupUrl
	}
	return ""
}

func (m *BackupStatusResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *BackupStatusResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func init() {
	proto.RegisterType((*BackingImageSpec)(nil), "longhorn.backingimagemanager.pkg.rpc.BackingImageSpec")
	proto.RegisterType((*BackingImageStatus)(nil), "longhorn.backingimagemanager.pkg.rpc.BackingImageStatus")
	proto.RegisterType((*BackingImageResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.BackingImageResponse")
	proto.RegisterType((*DeleteRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.DeleteRequest")
	proto.RegisterType((*GetRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.GetRequest")
	proto.RegisterType((*ListResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.ListResponse")
	proto.RegisterMapType((map[string]*BackingImageResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.ListResponse.BackingImagesEntry")
	proto.RegisterType((*VersionResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.VersionResponse")
	proto.RegisterType((*SyncRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.SyncRequest")
	proto.RegisterType((*SendRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.SendRequest")
	proto.RegisterType((*FetchRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.FetchRequest")
	proto.RegisterType((*PrepareDownloadRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.PrepareDownloadRequest")
	proto.RegisterType((*PrepareDownloadResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.PrepareDownloadResponse")
	proto.RegisterType((*BackupCreateRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.BackupCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "longhorn.backingimagemanager.pkg.rpc.BackupCreateRequest.CredentialEntry")
	proto.RegisterType((*BackupStatusRequest)(nil), "longhorn.backingimagemanager.pkg.rpc.BackupStatusRequest")
	proto.RegisterType((*BackupStatusResponse)(nil), "longhorn.backingimagemanager.pkg.rpc.BackupStatusResponse")
}

func init() {
	proto.RegisterFile("github.com/longhorn/backing-image-manager/pkg/rpc/rpc.proto", fileDescriptor_cdf73a3350f27fd7)
}

var fileDescriptor_cdf73a3350f27fd7 = []byte{
	// 1102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x57, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xce, 0xc6, 0x3f, 0x8d, 0x8f, 0x13, 0x92, 0x4e, 0xa3, 0x60, 0xb9, 0x44, 0x4a, 0x17, 0x90,
	0x52, 0xa1, 0xac, 0x4b, 0x5a, 0xa0, 0xb4, 0x54, 0x82, 0xfc, 0xb4, 0x14, 0x35, 0x22, 0x5a, 0x07,
	0x22, 0xc1, 0xc5, 0x6a, 0xbd, 0x3e, 0x59, 0x0f, 0xd9, 0xdd, 0x59, 0x66, 0x67, 0x53, 0x19, 0x95,
	0x1b, 0x6e, 0x90, 0xb8, 0xe2, 0x9a, 0x17, 0xe0, 0x05, 0x78, 0x22, 0x1e, 0x83, 0x2b, 0x34, 0xb3,
	0xb3, 0xf6, 0xda, 0x8d, 0xab, 0x75, 0x02, 0x17, 0x96, 0x76, 0xce, 0x99, 0xf3, 0xcd, 0xf9, 0x99,
	0xf3, 0x9d, 0x31, 0x3c, 0xf6, 0xa9, 0x18, 0xa4, 0x3d, 0xcb, 0x63, 0x61, 0x27, 0x60, 0x91, 0x3f,
	0x60, 0x3c, 0xea, 0xf4, 0x5c, 0xef, 0x9c, 0x46, 0xfe, 0x0e, 0x0d, 0x5d, 0x1f, 0x77, 0x42, 0x37,
	0x72, 0x7d, 0xe4, 0x9d, 0xf8, 0xdc, 0xef, 0xf0, 0xd8, 0x93, 0x3f, 0x2b, 0xe6, 0x4c, 0x30, 0xf2,
	0x5e, 0x6e, 0x61, 0x69, 0x0b, 0x65, 0xa0, 0xf7, 0x5b, 0xf1, 0xb9, 0x6f, 0xf1, 0xd8, 0x6b, 0xdf,
	0xf6, 0x19, 0xf3, 0x03, 0xec, 0x28, 0x9b, 0x5e, 0x7a, 0xd6, 0xc1, 0x30, 0x16, 0xc3, 0x0c, 0xc2,
	0xfc, 0x01, 0xd6, 0xf6, 0x32, 0xdb, 0xe7, 0xd2, 0xb6, 0x1b, 0xa3, 0x47, 0x08, 0x54, 0x23, 0x37,
	0xc4, 0x96, 0xb1, 0x65, 0x6c, 0x37, 0x6c, 0xf5, 0x2d, 0x65, 0x69, 0x4a, 0xfb, 0xad, 0xc5, 0x4c,
	0x26, 0xbf, 0xa5, 0x2c, 0xa1, 0x3f, 0x61, 0xab, 0xb2, 0x65, 0x6c, 0x57, 0x6c, 0xf5, 0x4d, 0xda,
	0xb0, 0xe4, 0x0d, 0xd0, 0x3b, 0x4f, 0xd2, 0xb0, 0x55, 0x55, 0x7b, 0x47, 0x6b, 0xf3, 0x6f, 0x03,
	0xc8, 0xc4, 0x61, 0xc2, 0x15, 0x69, 0x42, 0xd6, 0xa1, 0x96, 0x08, 0x57, 0xe4, 0xe7, 0x65, 0x0b,
	0x72, 0x1b, 0x1a, 0xc8, 0x39, 0xe3, 0x4e, 0x98, 0xf8, 0xfa, 0xd4, 0x25, 0x25, 0x38, 0x4a, 0x7c,
	0xf2, 0x01, 0xdc, 0x4c, 0x30, 0xea, 0xd3, 0xc8, 0x77, 0x38, 0x9e, 0x21, 0xc7, 0xc8, 0xcb, 0xdc,
	0xa8, 0xd9, 0x6b, 0x5a, 0x61, 0xe7, 0x72, 0xf2, 0x00, 0x36, 0xa4, 0x0c, 0xb9, 0xa3, 0x33, 0xe3,
	0xb8, 0xfd, 0x3e, 0xc7, 0x24, 0xd1, 0x0e, 0xae, 0x67, 0xda, 0xa3, 0x4c, 0xf9, 0x45, 0xa6, 0x93,
	0x81, 0xc4, 0x9c, 0xf9, 0x6a, 0x5f, 0x4d, 0x21, 0x8f, 0xd6, 0x13, 0x41, 0xd6, 0xa7, 0x82, 0xfc,
	0xcb, 0x80, 0xf5, 0x62, 0x90, 0x36, 0x26, 0x31, 0x8b, 0x12, 0x24, 0x5f, 0x41, 0x35, 0x89, 0xd1,
	0x53, 0x51, 0x36, 0x77, 0x3f, 0xb6, 0xca, 0xd4, 0xce, 0x9a, 0xae, 0x8d, 0xad, 0x30, 0xc8, 0x31,
	0xd4, 0x13, 0x95, 0x3c, 0x95, 0x99, 0xe6, 0xee, 0xc3, 0x2b, 0xa0, 0x29, 0x7b, 0x5b, 0xe3, 0x98,
	0x9f, 0xc0, 0xca, 0x01, 0x06, 0x28, 0xd0, 0xc6, 0x1f, 0x53, 0x4c, 0x44, 0xd9, 0x4b, 0x60, 0x3e,
	0x00, 0x78, 0x86, 0x62, 0x5e, 0xab, 0x7f, 0x0c, 0x58, 0x7e, 0x41, 0x13, 0x31, 0xca, 0x4e, 0x00,
	0x6f, 0x69, 0xcf, 0x1d, 0xe5, 0x7a, 0xd2, 0x32, 0xb6, 0x2a, 0xdb, 0xcd, 0xdd, 0xc3, 0x72, 0x91,
	0x15, 0xb1, 0x26, 0xc2, 0x4c, 0x0e, 0x23, 0xc1, 0x87, 0xf6, 0x4a, 0xaf, 0x28, 0x6b, 0xbf, 0x9a,
	0xbc, 0x88, 0xd9, 0x26, 0xb2, 0x06, 0x95, 0x73, 0x1c, 0x6a, 0xdf, 0xe5, 0x27, 0x39, 0x86, 0xda,
	0x85, 0x1b, 0xa4, 0xa8, 0xd3, 0xfc, 0x68, 0xfe, 0x34, 0xe7, 0x4e, 0xd9, 0x19, 0xd0, 0xa3, 0xc5,
	0x87, 0x86, 0xf9, 0xcb, 0x22, 0xac, 0x7e, 0x8b, 0x3c, 0xa1, 0x2c, 0x1a, 0xc5, 0xdf, 0x82, 0x1b,
	0x17, 0x99, 0x48, 0x9f, 0x9f, 0x2f, 0xc9, 0x3b, 0xd0, 0xf0, 0xa9, 0xd8, 0x67, 0x61, 0x48, 0x85,
	0xce, 0xe1, 0x58, 0x20, 0xb5, 0xbd, 0x94, 0x06, 0xfd, 0x03, 0xd9, 0x40, 0x95, 0x4c, 0x3b, 0x12,
	0x90, 0x2f, 0xe1, 0xce, 0x44, 0x56, 0xc7, 0x1d, 0x10, 0x53, 0x27, 0x3f, 0xaf, 0xaa, 0xda, 0x77,
	0xb3, 0x98, 0xa1, 0xbc, 0x17, 0x62, 0xaa, 0xfd, 0x24, 0x5f, 0xc3, 0xfb, 0xb3, 0x91, 0x42, 0x1a,
	0x8d, 0xd0, 0x6a, 0x0a, 0x6d, 0xeb, 0x72, 0xb4, 0x23, 0x1a, 0x69, 0x40, 0xf3, 0x15, 0x34, 0xbb,
	0xc3, 0xc8, 0xcb, 0x2f, 0xce, 0x7f, 0xd9, 0x1d, 0x77, 0x60, 0xf9, 0x8c, 0xb3, 0x70, 0xd4, 0xe6,
	0x59, 0xd2, 0x9a, 0x52, 0xa6, 0xbb, 0xdb, 0x3c, 0x81, 0x66, 0x17, 0xa3, 0xfe, 0x9c, 0xd7, 0x96,
	0x6c, 0x02, 0x08, 0x36, 0xc2, 0xd5, 0xe9, 0x16, 0x2c, 0x47, 0xfd, 0xcd, 0x80, 0xe5, 0xa7, 0x28,
	0xbc, 0xc1, 0xff, 0x11, 0x95, 0x05, 0xb7, 0xfa, 0xae, 0x70, 0x9d, 0x84, 0xa5, 0xdc, 0xc3, 0xa9,
	0xe0, 0x6e, 0x4a, 0x55, 0x57, 0x69, 0x72, 0x67, 0x3e, 0x87, 0x8d, 0x63, 0x8e, 0xb1, 0xcb, 0xf1,
	0x80, 0xbd, 0x8c, 0x02, 0xe6, 0xce, 0x1b, 0xad, 0x79, 0x0a, 0x6f, 0xbf, 0x86, 0xa0, 0xaf, 0xab,
	0x09, 0x2b, 0x09, 0xf7, 0x9c, 0x33, 0x1a, 0xa0, 0x13, 0xbb, 0x62, 0xa0, 0xb1, 0x9a, 0x09, 0xf7,
	0x9e, 0xd2, 0x00, 0x8f, 0x5d, 0x31, 0x90, 0x57, 0x7a, 0xd2, 0xc9, 0x7c, 0x69, 0xfe, 0x51, 0x81,
	0x5b, 0x32, 0xca, 0x34, 0xde, 0xe7, 0xe8, 0xce, 0xcd, 0x39, 0x13, 0xfc, 0x5b, 0x99, 0xe4, 0x5f,
	0xf2, 0x2e, 0xa8, 0x5e, 0x4f, 0x63, 0x47, 0xb8, 0xdc, 0x47, 0xa1, 0x49, 0x7e, 0x39, 0x13, 0x9e,
	0x28, 0x19, 0xd9, 0x80, 0x7a, 0xe0, 0xf6, 0x30, 0x90, 0xd4, 0x5e, 0xd9, 0x6e, 0xd8, 0x7a, 0x45,
	0x28, 0x80, 0xc7, 0xb1, 0x8f, 0x91, 0xa0, 0x6e, 0xd0, 0xaa, 0x2b, 0x06, 0x7a, 0x5e, 0xbe, 0x6a,
	0x53, 0xf1, 0x58, 0xfb, 0x23, 0xac, 0x8c, 0x85, 0x0a, 0xe0, 0x64, 0x07, 0x88, 0xc7, 0xc2, 0x58,
	0xe6, 0x83, 0xb2, 0xc8, 0x09, 0x51, 0x0c, 0x58, 0xbf, 0x75, 0x23, 0xab, 0x66, 0x41, 0x73, 0xa4,
	0x14, 0xe4, 0x2e, 0xac, 0x79, 0x2c, 0xf2, 0x52, 0xce, 0x31, 0x12, 0x4e, 0x40, 0x25, 0x19, 0x2c,
	0xa9, 0xb1, 0xb4, 0x3a, 0x96, 0xbf, 0x90, 0xe2, 0xf6, 0x13, 0x58, 0x9d, 0x3a, 0xf8, 0x12, 0x66,
	0x5b, 0x2f, 0x32, 0x5b, 0xa3, 0xc8, 0x4e, 0x77, 0xf3, 0xda, 0xe8, 0x09, 0x31, 0xbb, 0x36, 0xe6,
	0xcf, 0xd9, 0xa8, 0x1b, 0x6f, 0xd5, 0xb7, 0xa3, 0x38, 0x3b, 0x8d, 0xa9, 0xd9, 0xb9, 0x09, 0xa0,
	0xeb, 0x93, 0xf2, 0x20, 0xe7, 0xb3, 0x4c, 0xf2, 0x0d, 0x0f, 0xa4, 0x5f, 0x6a, 0xca, 0xeb, 0xba,
	0x66, 0x8b, 0xf1, 0x13, 0xa1, 0x5a, 0x78, 0x22, 0xec, 0xfe, 0xd9, 0x80, 0xf6, 0xde, 0xeb, 0x3c,
	0xd3, 0x45, 0x7e, 0x41, 0x3d, 0x24, 0xa7, 0x50, 0xcf, 0x46, 0x1a, 0xb9, 0x5f, 0xae, 0x84, 0x13,
	0x03, 0xb0, 0xbd, 0x61, 0x65, 0xef, 0x26, 0x2b, 0x7f, 0x37, 0x59, 0x87, 0xf2, 0xdd, 0x64, 0x2e,
	0x90, 0x14, 0x2a, 0xcf, 0x50, 0x90, 0x7b, 0xe5, 0x50, 0xc7, 0xd3, 0xb1, 0x7d, 0x8d, 0xf9, 0x61,
	0x2e, 0x90, 0x13, 0xa8, 0xca, 0x31, 0x47, 0x66, 0x38, 0xd6, 0xde, 0x9d, 0x7f, 0x54, 0x9a, 0x0b,
	0xe4, 0x7b, 0x00, 0x4d, 0xc9, 0x32, 0xa6, 0x59, 0xd8, 0x1f, 0x95, 0xc3, 0x9e, 0x9e, 0x6a, 0x2f,
	0xa1, 0x2a, 0x49, 0x9e, 0x7c, 0x58, 0xce, 0xbc, 0x30, 0x10, 0xae, 0x99, 0xab, 0x2e, 0x54, 0x25,
	0xbf, 0x97, 0x3e, 0x78, 0x3c, 0x0b, 0xde, 0x50, 0xf7, 0x21, 0xd4, 0x14, 0xbb, 0x93, 0x92, 0x99,
	0x2e, 0x8e, 0x82, 0x6b, 0xc6, 0xf3, 0xbb, 0x01, 0xab, 0x53, 0x5c, 0x4c, 0x3e, 0x2b, 0x87, 0x78,
	0xf9, 0x10, 0x68, 0x3f, 0xb9, 0xa2, 0xf5, 0xc8, 0x25, 0x0f, 0x96, 0x8b, 0x9c, 0x47, 0x3e, 0xbd,
	0x32, 0x4f, 0xbe, 0x21, 0xe5, 0xbf, 0x1a, 0xf9, 0x29, 0xfa, 0xcf, 0xc2, 0x5c, 0xa7, 0x4c, 0x30,
	0xd8, 0x3c, 0x15, 0x98, 0x66, 0x34, 0x73, 0x81, 0x3c, 0x86, 0xda, 0xa9, 0x2b, 0x8b, 0x3f, 0xab,
	0x45, 0x66, 0x06, 0x71, 0xcf, 0xd8, 0xab, 0x7d, 0x57, 0xe1, 0xb1, 0xd7, 0xab, 0x2b, 0xd5, 0xfd,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xbc, 0x15, 0x3b, 0xf5, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackingImageManagerServiceClient is the client API for BackingImageManagerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackingImageManagerServiceClient interface {
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*BackingImageResponse, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListResponse, error)
	VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
	Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*BackingImageResponse, error)
	Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*BackingImageResponse, error)
	PrepareDownload(ctx context.Context, in *PrepareDownloadRequest, opts ...grpc.CallOption) (*PrepareDownloadResponse, error)
	BackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	BackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error)
	Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BackingImageManagerService_WatchClient, error)
}

type backingImageManagerServiceClient struct {
	cc *grpc.ClientConn
}

func NewBackingImageManagerServiceClient(cc *grpc.ClientConn) BackingImageManagerServiceClient {
	return &backingImageManagerServiceClient{cc}
}

func (c *backingImageManagerServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*BackingImageResponse, error) {
	out := new(BackingImageResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/VersionGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) Sync(ctx context.Context, in *SyncRequest, opts ...grpc.CallOption) (*BackingImageResponse, error) {
	out := new(BackingImageResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Sync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) Send(ctx context.Context, in *SendRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*BackingImageResponse, error) {
	out := new(BackingImageResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) PrepareDownload(ctx context.Context, in *PrepareDownloadRequest, opts ...grpc.CallOption) (*PrepareDownloadResponse, error) {
	out := new(PrepareDownloadResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/PrepareDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) BackupCreate(ctx context.Context, in *BackupCreateRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/BackupCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) BackupStatus(ctx context.Context, in *BackupStatusRequest, opts ...grpc.CallOption) (*BackupStatusResponse, error) {
	out := new(BackupStatusResponse)
	err := c.cc.Invoke(ctx, "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/BackupStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backingImageManagerServiceClient) Watch(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BackingImageManagerService_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BackingImageManagerService_serviceDesc.Streams[0], "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &backingImageManagerServiceWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BackingImageManagerService_WatchClient interface {
	Recv() (*empty.Empty, error)
	grpc.ClientStream
}

type backingImageManagerServiceWatchClient struct {
	grpc.ClientStream
}

func (x *backingImageManagerServiceWatchClient) Recv() (*empty.Empty, error) {
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BackingImageManagerServiceServer is the server API for BackingImageManagerService service.
type BackingImageManagerServiceServer interface {
	Delete(context.Context, *DeleteRequest) (*empty.Empty, error)
	Get(context.Context, *GetRequest) (*BackingImageResponse, error)
	List(context.Context, *empty.Empty) (*ListResponse, error)
	VersionGet(context.Context, *empty.Empty) (*VersionResponse, error)
	Sync(context.Context, *SyncRequest) (*BackingImageResponse, error)
	Send(context.Context, *SendRequest) (*empty.Empty, error)
	Fetch(context.Context, *FetchRequest) (*BackingImageResponse, error)
	PrepareDownload(context.Context, *PrepareDownloadRequest) (*PrepareDownloadResponse, error)
	BackupCreate(context.Context, *BackupCreateRequest) (*empty.Empty, error)
	BackupStatus(context.Context, *BackupStatusRequest) (*BackupStatusResponse, error)
	Watch(*empty.Empty, BackingImageManagerService_WatchServer) error
}

// UnimplementedBackingImageManagerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBackingImageManagerServiceServer struct {
}

func (*UnimplementedBackingImageManagerServiceServer) Delete(ctx context.Context, req *DeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) Get(ctx context.Context, req *GetRequest) (*BackingImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) List(ctx context.Context, req *empty.Empty) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) VersionGet(ctx context.Context, req *empty.Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionGet not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) Sync(ctx context.Context, req *SyncRequest) (*BackingImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sync not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) Send(ctx context.Context, req *SendRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) Fetch(ctx context.Context, req *FetchRequest) (*BackingImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) PrepareDownload(ctx context.Context, req *PrepareDownloadRequest) (*PrepareDownloadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrepareDownload not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) BackupCreate(ctx context.Context, req *BackupCreateRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackupCreate not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) BackupStatus(ctx context.Context, req *BackupStatusRequest) (*BackupStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackupStatus not implemented")
}
func (*UnimplementedBackingImageManagerServiceServer) Watch(req *empty.Empty, srv BackingImageManagerService_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterBackingImageManagerServiceServer(s *grpc.Server, srv BackingImageManagerServiceServer) {
	s.RegisterService(&_BackingImageManagerService_serviceDesc, srv)
}

func _BackingImageManagerService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_VersionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).VersionGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/VersionGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).VersionGet(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_Sync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).Sync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Sync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).Sync(ctx, req.(*SyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).Send(ctx, req.(*SendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).Fetch(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_PrepareDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrepareDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).PrepareDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/PrepareDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).PrepareDownload(ctx, req.(*PrepareDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_BackupCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).BackupCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/BackupCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).BackupCreate(ctx, req.(*BackupCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_BackupStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackingImageManagerServiceServer).BackupStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService/BackupStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackingImageManagerServiceServer).BackupStatus(ctx, req.(*BackupStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BackingImageManagerService_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BackingImageManagerServiceServer).Watch(m, &backingImageManagerServiceWatchServer{stream})
}

type BackingImageManagerService_WatchServer interface {
	Send(*empty.Empty) error
	grpc.ServerStream
}

type backingImageManagerServiceWatchServer struct {
	grpc.ServerStream
}

func (x *backingImageManagerServiceWatchServer) Send(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

var _BackingImageManagerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "longhorn.backingimagemanager.pkg.rpc.BackingImageManagerService",
	HandlerType: (*BackingImageManagerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Delete",
			Handler:    _BackingImageManagerService_Delete_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _BackingImageManagerService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _BackingImageManagerService_List_Handler,
		},
		{
			MethodName: "VersionGet",
			Handler:    _BackingImageManagerService_VersionGet_Handler,
		},
		{
			MethodName: "Sync",
			Handler:    _BackingImageManagerService_Sync_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _BackingImageManagerService_Send_Handler,
		},
		{
			MethodName: "Fetch",
			Handler:    _BackingImageManagerService_Fetch_Handler,
		},
		{
			MethodName: "PrepareDownload",
			Handler:    _BackingImageManagerService_PrepareDownload_Handler,
		},
		{
			MethodName: "BackupCreate",
			Handler:    _BackingImageManagerService_BackupCreate_Handler,
		},
		{
			MethodName: "BackupStatus",
			Handler:    _BackingImageManagerService_BackupStatus_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _BackingImageManagerService_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/longhorn/backing-image-manager/pkg/rpc/rpc.proto",
}
